/*! Built with http://stenciljs.com */
const{h:t}=window.App;function e(t,e){return`screenshot_mismatch_${t}_${e}`}class i{constructor(){this.diffs=[]}componentWillLoad(){this.diffs=function(t,i,a,n){const l=t.screenshots.map(t=>({id:t.id,desc:t.desc,imageA:t.image,imageUrlA:`${a}${t.image}`,jsonpUrlA:`${n}screenshot_${t.image}.js`,imageB:null,imageUrlB:null,jsonpUrlB:null,mismatchedPixels:null,mismatchedRatio:null,width:t.width,height:t.height,deviceScaleFactor:t.deviceScaleFactor,naturalWidth:t.naturalWidth,naturalHeight:t.naturalHeight,device:t.device,userAgent:t.userAgent}));return i.screenshots.forEach(t=>{let e=l.find(e=>e.id===t.id);e?(e.imageB=t.image,e.imageUrlB=`${a}${t.image}`,e.jsonpUrlB=`${n}screenshot_${t.image}.js`):l.push(e={id:t.id,desc:t.desc,imageA:null,imageUrlA:null,jsonpUrlA:null,imageB:t.image,imageUrlB:`${a}${t.image}`,jsonpUrlB:`${n}screenshot_${t.image}.js`,mismatchedPixels:null,mismatchedRatio:null,width:t.width,height:t.height,deviceScaleFactor:t.deviceScaleFactor,naturalWidth:t.naturalWidth,naturalHeight:t.naturalHeight,device:t.device,userAgent:t.userAgent})}),l.forEach(t=>{if(t.identical=t.imageUrlA===t.imageUrlB,t.identical)return t.mismatchedPixels=0,void(t.mismatchedRatio=0);const i=function(i,a){const n=e(t.imageA,t.imageB),l=localStorage.getItem(n);return"string"==typeof l?parseInt(l,10):null}();"number"!=typeof i||(t.mismatchedPixels=i,t.mismatchedRatio=t.mismatchedPixels/(t.naturalWidth*t.naturalHeight),0!==t.mismatchedPixels)||(t.identical=!0)}),l}(this.buildA,this.buildB,this.imagesUrl,this.jsonpUrl)}render(){return[t("ion-header",null,t("ion-toolbar",{color:"primary"},t("ion-title",null,"Screenshot Compare"))),t("ion-content",{"scroll-x":"true"},t("table",null,t("tr",null,t("th",null,"Master"),t("th",null,this.buildB.message),t("th",null,"Diff"),t("th",null,"Analysis")),this.diffs.map(e=>t("tr",{key:e.id},t("td",null,e.imageUrlA?t("a",{id:"link-a-"+e.id,style:{width:e.width+"px",height:e.height+"px"},href:e.imageUrlA,class:"img-link",target:"_blank"}):null),t("td",null,e.imageUrlB?t("a",{id:"link-b-"+e.id,style:{width:e.width+"px",height:e.height+"px"},href:e.imageUrlB,class:"img-link",target:"_blank"}):null),t("td",null,t("local-pixelmatch",{diff:e})),t("td",{class:"analysis"},t("div",null,e.device||e.userAgent?t("strong",null,e.device||e.userAgent,": "):null,e.desc),t("div",null,t("strong",null,"Mismatched Pixels"),": ",t("span",{id:"mismatch-pixels-"+e.id},null!=e.mismatchedPixels?e.mismatchedPixels:"...")),t("div",null,t("strong",null,"Mismatched Ratio"),": ",t("span",{id:"mismatch-ratio-"+e.id},null!=e.mismatchedRatio?e.mismatchedRatio.toFixed(4):"...")))))))]}static get is(){return"local-compare"}static get properties(){return{buildA:{type:"Any",attr:"build-a"},buildB:{type:"Any",attr:"build-b"},imagesUrl:{type:String,attr:"images-url"},jsonpUrl:{type:String,attr:"jsonp-url"}}}}var a=function(t,e,i,a,r,d){d||(d={});for(var m=void 0===d.threshold?.1:d.threshold,o=35215*m*m,u=0,g=0;g<r;g++)for(var p=0;p<a;p++){var f=4*(g*a+p);if(l(t,e,f,f)>o)d.includeAA||!n(t,p,g,a,r,e)&&!n(e,p,g,a,r,t)?(i&&h(i,f,255,0,0),u++):i&&h(i,f,255,255,0);else if(i){var x=c(s(c((v=t)[(A=f)+0],w=v[A+3]/255),c(v[A+1],w),c(v[A+2],w)),.1);h(i,f,x,x,x)}}var v,A,w;return u};function n(t,e,i,a,s,r){for(var d,c,h,m,o=Math.max(e-1,0),u=Math.max(i-1,0),g=Math.min(e+1,a-1),p=Math.min(i+1,s-1),f=4*(i*a+e),x=0,v=0,A=0,w=0,y=0,B=o;B<=g;B++)for(var U=u;U<=p;U++)if(B!==e||U!==i){var $=l(t,t,f,4*(U*a+B),!0);if(0===$?x++:$<0?A++:$>0&&v++,x>2)return!1;r&&($<w&&(w=$,d=B,c=U),$>y&&(y=$,h=B,m=U))}return!r||0!==A&&0!==v&&(!n(t,d,c,a,s)&&!n(r,d,c,a,s)||!n(t,h,m,a,s)&&!n(r,h,m,a,s))}function l(t,e,i,a,n){var l=t[i+3]/255,h=e[a+3]/255,m=c(t[i+0],l),o=c(t[i+1],l),u=c(t[i+2],l),g=c(e[a+0],h),p=c(e[a+1],h),f=c(e[a+2],h),x=s(m,o,u)-s(g,p,f);if(n)return x;var v=r(m,o,u)-r(g,p,f),A=d(m,o,u)-d(g,p,f);return.5053*x*x+.299*v*v+.1957*A*A}function s(t,e,i){return.29889531*t+.58662247*e+.11448223*i}function r(t,e,i){return.59597799*t-.2741761*e-.32180189*i}function d(t,e,i){return.21147017*t-.52261711*e+.31114694*i}function c(t,e){return 255+(t-255)*e}function h(t,e,i,a,n){t[e+0]=i,t[e+1]=a,t[e+2]=n,t[e+3]=255}class m{constructor(){this.initialized=!1}componentDidLoad(){const t=this.diff,e=new Image(t.naturalWidth,t.naturalHeight);e.style.width=`${t.width}px`,e.style.height=`${t.height}px`;const i=new Image(t.naturalWidth,t.naturalHeight);if(i.style.width=`${t.width}px`,i.style.height=`${t.height}px`,null!=t.imageA){e.onload=(()=>{const a=document.getElementById(`link-a-${t.id}`);a&&(a.appendChild(e),this.pixelmatch(e,i)),e.onload=null}),o.push({imageName:t.imageA,callback:t=>{e.src=t}});const a=document.createElement("script");a.src=t.jsonpUrlA,document.head.appendChild(a)}if(null!=t.imageB){i.onload=(()=>{const a=document.getElementById(`link-b-${t.id}`);a&&(a.appendChild(i),this.pixelmatch(e,i)),i.onload=null}),o.push({imageName:t.imageB,callback:t=>{i.src=t}});const a=document.createElement("script");a.src=t.jsonpUrlB,document.head.appendChild(a)}}async pixelmatch(t,i){const n=this.diff;t.complete&&i.complete&&!this.initialized&&!n.identical&&(this.initialized=!0,n.mismatchedPixels=await function(t,e,i,n,l){const s=document.createElement("canvas");s.width=n,s.height=l;const r=document.createElement("canvas");r.width=n,r.height=l;const d=s.getContext("2d");d.drawImage(t,0,0);const c=r.getContext("2d");c.drawImage(e,0,0);const h=document.createElement("canvas").getContext("2d");h.drawImage(t,0,0),h.getImageData(0,0,n,l);const m=d.getImageData(0,0,n,l).data,o=c.getImageData(0,0,n,l).data,u=i.getContext("2d"),g=u.createImageData(n,s.height),p=a(m,o,g.data,n,l,{threshold:.1});return u.putImageData(g,0,0),p}(t,i,this.canvasDiff,n.naturalWidth,n.naturalHeight),document.getElementById(`mismatch-pixels-${n.id}`).textContent=n.mismatchedPixels+"",n.mismatchedRatio=n.mismatchedPixels/(n.naturalWidth*n.naturalHeight),document.getElementById(`mismatch-ratio-${n.id}`).textContent=n.mismatchedRatio.toFixed(4),function(t,i,a){const l=e(n.imageA,n.imageB);localStorage.setItem(l,String(a))}(0,0,n.mismatchedPixels))}render(){const e=this.diff;return e.identical?t("img",{src:e.imageUrlA,style:{width:e.width+"px",height:e.height+"px"}}):[t("canvas",{ref:t=>this.canvasDiff=t,width:e.naturalWidth,height:e.naturalHeight,style:{width:e.width+"px",height:e.height+"px"}})]}static get is(){return"local-pixelmatch"}static get properties(){return{diff:{type:"Any",attr:"diff"}}}}let o=[];window.loadScreenshot=((t,e)=>{o.filter(e=>e.imageName===t).forEach(t=>t.callback(e))});export{i as LocalCompare,m as LocalPixelmatch};